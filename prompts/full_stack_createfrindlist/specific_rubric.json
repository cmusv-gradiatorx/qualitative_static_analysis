[
  {
    "criterion_name": "CreateFriendList > DisplaysFriends",
    "max_points": 2.0,
    "specific_prompt": "Evaluate the 'DisplaysFriends' acceptance criterion for the 'CreateFriendList' user story.\n\n**User Story Context:** As a User, I want to create a local list of my Friends on my browser so that I can later invite them to YACA.\n\n**Acceptance Criterion: DisplaysFriends**\n*   **Given:** N/A\n*   **When:** The User navigates to the Friend List page…\n*   **Then:**\n    *   YACA retrieves the User’s existing Friend List stored locally. (Initially, the Friend List is empty.)\n    *   YACA displays the retrieved Friend List on the Friend List page with each row representing information about an existing Friend.\n    *   The page automatically scrolls all the way to the bottom of its window.\n    *   Each Friend has a checkbox that can be checked by the user.\n\n**Scoring:**\n- **Complete / Code OK (2.0 pts):** All 'Then' conditions are fully met. The friend list is retrieved (even if initially empty), displayed correctly with rows for each friend, each row includes a checkbox, and the page auto-scrolls to the bottom upon navigation.\n- **Partially Complete / Code Problematic (1.5 pts):** Most 'Then' conditions are met, but there are minor issues. For example, auto-scroll might not work, checkboxes might be missing or non-functional, or initial retrieval/display has slight problems but is mostly there.\n- **Insufficient (0 pts):** Significant parts of the 'Then' conditions are not met, or the display functionality is fundamentally broken or missing.\n\nFocus on: Local storage retrieval (or simulation if purely client-side initial state), correct rendering of the list (even if empty initially), presence of checkboxes, and the auto-scroll behavior on page load/navigation."
  },
  {
    "criterion_name": "CreateFriendList > AddsAFriend",
    "max_points": 3.0,
    "specific_prompt": "Evaluate the 'AddsAFriend' acceptance criterion for the 'CreateFriendList' user story.\n\n**User Story Context:** As a User, I want to create a local list of my Friends on my browser so that I can later invite them to YACA.\n\n**Acceptance Criterion: AddsANewFriend**\n*   **Given:** The User is on the Friend List page. The Friend List page displays the User’s existing Friend List. The User has entered a new Friend’s name and email in the respective input fields.\n*   **When:** The User clicks on the Add Friend button on the Friend List page…\n*   **Then:**\n    *   YACA adds a new row to the bottom of the User’s Friend List that contains: an unchecked checkbox, the Friend’s name, and the Friend’s email.\n    *   The Friend List should be ordered such that the first friend added should be at the top and last friend should be at the bottom, with others listed in the same order as they were added from top to bottom.\n    *   The page automatically scrolls all the way to the bottom of its window.\n*   **Implementation Constraints:** The whole page should not refresh after adding a new friend: it should only be partially updated.\n\n**Scoring:**\n- **Complete / Code OK (3.0 pts):** All 'Then' conditions and the implementation constraint are fully met. A new friend is added to the bottom of the list with correct details (checkbox, name, email), order is maintained, the page auto-scrolls, and there's no full page refresh (DOM is partially updated).\n- **Partially Complete / Code Problematic (2.0 pts):** Most 'Then' conditions are met, but there are issues. For example, the friend is added but not to the bottom, order is incorrect, auto-scroll fails, or a full page refresh occurs. Or, some details in the new row are missing/incorrect.\n- **Insufficient (0 pts):** The friend is not added, or the process is fundamentally broken, or multiple 'Then' conditions/constraints are not met.\n\nFocus on: DOM manipulation for adding the new row, content of the new row, correct ordering, auto-scroll on add, and verification of partial page update (no full refresh)."
  },
  {
    "criterion_name": "CreateFriendList > ProvidesIncompleteFriendInfo",
    "max_points": 1.0,
    "specific_prompt": "Evaluate the 'ProvidesIncompleteFriendInfo' acceptance criterion for the 'CreateFriendList' user story.\n\n**User Story Context:** As a User, I want to create a local list of my Friends on my browser so that I can later invite them to YACA.\n\n**Acceptance Criterion: ProvidesIncompleteFriendInfo**\n*   **Given:** The User is on the Friend List page. The User has left either the name or email input field empty.\n*   **When:** The User clicks on the Add Friend button…\n*   **Then:** YACA informs the User that the name and email fields must be provided. A new friend row not added to the Friend List.\n*   **Implementation Constraints:** Use the ‘required’ HTML attribute to enforce refusal of empty input fields.\n\n**Scoring:**\n- **Complete / Code OK (1.0 pts):** The system correctly prevents adding a friend if name or email is empty, informs the user (implicitly or explicitly through browser validation UI), and this is enforced using the 'required' HTML attribute on the input fields. No new friend row is added.\n- **Partially Complete / Code Problematic (0.75 pts):** The system prevents adding the friend, but the 'required' attribute might not be used (e.g., JS validation is used instead where HTML attribute was specified), or user feedback is unclear. Or, the attribute is used but some scenarios still allow submission incorrectly.\n- **Insufficient (0 pts):** The system allows adding a friend with empty fields, or there's no validation, or the 'required' attribute is not used and no alternative robust validation is in place.\n\nFocus on: The presence and effectiveness of the 'required' HTML attribute on both name and email input fields, and the outcome that no friend is added if fields are empty."
  },
  {
    "criterion_name": "CreateFriendList > ProvidesInvalidEmail",
    "max_points": 1.0,
    "specific_prompt": "Evaluate the 'ProvidesInvalidEmail' acceptance criterion for the 'CreateFriendList' user story.\n\n**User Story Context:** As a User, I want to create a local list of my Friends on my browser so that I can later invite them to YACA.\n\n**Acceptance Criterion: ProvidesInvalidEmail**\n*   **Given:** The User is on the Friend List page. The User has entered a syntactically invalid email address in the email input field.\n*   **When:** The User clicks on the Add Friend button…\n*   **Then:** YACA informs the User that the email provided must be valid. A new friend row not added to the Friend List.\n*   **Implementation Constraints:** Use the ‘type=\"email\"’ HTML attribute to automatically check the validity of an email address.\n\n**Scoring:**\n- **Complete / Code OK (1.0 pts):** The system correctly prevents adding a friend if the email is syntactically invalid, informs the user (implicitly or explicitly through browser validation UI), and this is enforced using the 'type=\"email\"' HTML attribute on the email input field. No new friend row is added.\n- **Partially Complete / Code Problematic (0.75 pts):** The system prevents adding the friend with an invalid email, but the 'type=\"email\"' attribute might not be used (e.g., JS validation is used instead where HTML attribute was specified), or user feedback is unclear. Or, the attribute is used but some invalid emails are still accepted, or valid ones rejected.\n- **Insufficient (0 pts):** The system allows adding a friend with a syntactically invalid email, or there's no validation for email format, or the 'type=\"email\"' attribute is not used and no alternative robust validation is in place.\n\nFocus on: The presence and effectiveness of the 'type=\"email\"' HTML attribute on the email input field, and the outcome that no friend is added if the email format is invalid."
  },
  {
    "criterion_name": "CreateFriendList > AddsAnExistingFriend",
    "max_points": 1.0,
    "specific_prompt": "Evaluate the 'AddsAnExistingFriend' acceptance criterion for the 'CreateFriendList' user story.\n\n**User Story Context:** As a User, I want to create a local list of my Friends on my browser so that I can later invite them to YACA.\n\n**Acceptance Criterion: AddsAnExistingFriend**\n*   **Given:** The User is on the Friend List page. The Friend List page displays the User’s existing Friend List. The User has entered a Friend’s name and email. The email address matches that of an existing Friend (case-insensitive).\n*   **When:** The User clicks on the Add Friend button…\n*   **Then:**\n    *   YACA informs the User with an alert message that a Friend with the same email already exists and refuses to add the new Friend.\n    *   The User acknowledges this.\n    *   YACA clears the email field so that the User can correct it.\n\n**Scoring:**\n- **Complete / Code OK (1.0 pts):** All 'Then' conditions are fully met. An alert message appears for duplicate emails (checked case-insensitively), the duplicate friend is not added, and the email input field is cleared after the alert is acknowledged.\n- **Partially Complete / Code Problematic (0.75 pts):** Most 'Then' conditions are met, but there are issues. For example, the alert might be missing, or the check is case-sensitive, or the friend is still added, or the email field isn't cleared. One part of the 'Then' sequence is missing or incorrect.\n- **Insufficient (0 pts):** Duplicate friends are added without warning, or the checking mechanism is entirely missing or fundamentally flawed, or multiple 'Then' conditions are not met.\n\nFocus on: The case-insensitive check for existing emails, the use of an alert for notification, prevention of adding duplicates, and the clearing of the email field."
  }
]