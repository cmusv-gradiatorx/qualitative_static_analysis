# Python
################################################################################
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
build/
dist/
eggs/
*.egg-info/
*.egg
wheels/
pip-wheel-metadata/

# PyInstaller
# Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Environments - Important to ignore these to avoid committing local environment setups
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# mypy cache
.mypy_cache/

# pytest cache
.pytest_cache/

# Coverage data
.coverage
.coverage.*
htmlcov/
coverage.xml

# IDE configuration files
################################################################################
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# Vim swap files
*.sw[po]
*~
*.bak

# OS-generated files
################################################################################
# macOS
.DS_Store
.AppleDouble
.LSOverride
.Spotlight-V100
.Trashes

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Gradiator Project Specific
################################################################################

# Input folder for assignment ZIP files (runtime data)
input/

# Output folder for evaluation reports (generated files)
output/

# Temporary folder for processing (intermediate files)
temp/

# Log files folder
logs/
extra_logs
# You might also want to ignore specific log files if they appear in the root
*.log
*.log.*

# Configuration file containing secrets and local settings.
# It's highly recommended to track a `config.env.example` or `config.env.template`
# with placeholder values instead of the actual `config.env`.
config.env

# If you ever decide to manage Node.js dependencies locally for tools like repomix
# (though npx usually avoids this for global/on-demand tools)
# node_modules/
# npm-debug.log*
# yarn-debug.log*
# yarn-error.log*
# package-lock.json # If you don't want to track exact dependency versions for Node tools
# yarn.lock         # If you don't want to track exact dependency versions for Node tools

# Requirements
################################################################################
Requirements.md

src/faiss/data/

faiss_performance_evaluation*

src/faiss/assignment_indices/*
src/faiss/clustering/models/*
clustering_results/*

.cache/*
models/*

cluster_evaluation_results/*